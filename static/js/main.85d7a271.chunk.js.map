{"version":3,"sources":["components/app-header/app-header.js","components/search-panel/search-panel.js","components/todo-list-item/todo-list-item.js","components/todo-list/todo-list.js","components/item-status-filter/item-status-filter.js","components/item-add-form/item-add-form.js","components/app/app.js","index.js"],"names":["AppHeader","_ref","toDo","done","react_default","a","createElement","className","SearchPanel","state","term","onSearchChange","e","target","value","_this","setState","props","type","placeholder","this","onChange","Component","TodoListItem","_this$props","label","onDeleted","onToggleImportant","onToggleDone","important","classNames","onClick","TodoList","todos","elements","map","item","id","itemProps","Object","objectWithoutProperties","key","todo_list_item_TodoListItem","assign","ItemStatusFilter","buttons","name","filter","onFilterChange","clazz","concat","ItemAddForm","onLabelChange","onSubmit","preventDefault","addItem","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","el","toConsumableArray","slice","text","newItem","_ref2","_ref3","toggleProperty","_ref4","arr","propName","oldItem","objectSpread","defineProperty","items","length","toLowerCase","indexOf","_this$state","visibleItems","search","doneCount","todoCount","app_header_app_header","search_panel_SearchPanel","item_status_filter_ItemStatusFilter","todo_list_todo_list","item_add_form_ItemAddForm","ReactDOM","render","app_App","document","getElementById"],"mappings":"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","file":"static/js/main.85d7a271.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./app-header.css\";\r\n\r\nconst AppHeader = ({ toDo, done}) => {\r\n    return (\r\n        <div className=\"app-header d-flex\">\r\n            <h1>Todo React</h1>\r\n            <h2>{toDo} more to do, {done} done</h2>\r\n        </div>\r\n        \r\n    );\r\n};\r\n\r\nexport default AppHeader;","import React, { Component } from \"react\";\r\n\r\nimport \"./search-panel.css\";\r\n\r\nexport default class SearchPanel extends Component {\r\n\r\n    state = {\r\n        term: \"\"\r\n    };\r\n\r\n    onSearchChange = (e) => {\r\n        const term = e.target.value;\r\n        this.setState({ term });\r\n        this.props.onSearchChange(term);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <input type=\"text\"\r\n                    placeholder=\"search\"\r\n                    className=\"form-control search-input\"\r\n                    value = {this.state.term}\r\n                    onChange = {this.onSearchChange} />\r\n        );\r\n    };\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./todo-list-item.css\";\r\n\r\nexport default class TodoListItem extends Component {\r\n\r\n\trender () {\r\n\r\n\t\tconst { label, onDeleted, onToggleImportant, onToggleDone, important, done } = this.props;\r\n\r\n\t\tlet classNames = \"todo-list-item\";\r\n\t\tif (done) {\r\n\t\t\tclassNames += \" done\";\r\n\t\t}\r\n\r\n\t\tif (important) {\r\n\t\t\tclassNames += \" important\";\r\n\t\t}\r\n\t\r\n\t\treturn (\r\n\t\t\t<span className={ classNames }>\r\n\t\t\t\t<span\r\n\t\t\t\t\tclassName= \"todo-list-item-label\"\r\n\t\t\t\t\tonClick = { onToggleDone }>\r\n\t\t\t\t\t{label}\r\n\t\t\t\t</span>\r\n\t\r\n\t\t\t\t<button type=\"button\"\r\n\t\t\t\t\tclassName=\"btn btn-outline-success btn-sm float-right\"\r\n\t\t\t\t\tonClick = { onToggleImportant } >\r\n\t\t\t\t\t<i className=\"fa fa-exclamation\" />\r\n\t\t\t\t</button>\r\n\t\r\n\t\t\t\t<button type=\"button\"\r\n\t\t\t\t\tclassName=\"btn btn-outline-danger btn-sm float-right\"\r\n\t\t\t\t\tonClick = {onDeleted}>\r\n\t\t\t\t\t<i className=\"fa fa-trash-o\" />\r\n\t\t\t\t</button>\r\n\t\t\t</span>\r\n\t\t);\r\n\t}\r\n\t\r\n};\r\n","import React from \"react\";\r\n\r\nimport TodoListItem from \"../todo-list-item/todo-list-item\";\r\nimport \"./todo-list.css\";\r\n\r\nconst TodoList = ({ todos, onDeleted, onToggleImportant, onToggleDone }) => {\r\n    \r\n    const elements = todos.map((item) => {\r\n\r\n        const {id, ...itemProps} = item;\r\n\r\n        return (\r\n            <li key={id} className=\"list-group-item\">\r\n                <TodoListItem \r\n                    { ...itemProps }\r\n                    onDeleted = { () => onDeleted(id) }\r\n                    onToggleImportant = {() => onToggleImportant(id)}\r\n                    onToggleDone = {() => onToggleDone(id)}\r\n                />\r\n            </li>\r\n        );\r\n    });\r\n    \r\n    return (\r\n        <ul className=\"list-group todo-list\">\r\n            {elements}\r\n        </ul>\r\n    );  \r\n};\r\n\r\nexport default TodoList;","import React, { Component } from \"react\";\r\n\r\nimport \"./item-status-filter.css\";\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n\r\n    buttons = [\r\n        {name: \"all\", label: \"All\"},\r\n        {name: \"active\", label: \"Active\"},\r\n        {name: \"done\", label: \"Done\"}\r\n    ];\r\n    \r\n    render () {\r\n\r\n        const { filter, onFilterChange } = this.props;\r\n\r\n        const buttons = this.buttons.map( ({ name, label }) => {\r\n            const isActive = filter === name;\r\n            const clazz = isActive ? \"btn-info\" : \"btn-outline-secondary\";\r\n            return (\r\n                <button type=\"button\"\r\n                    className ={`btn ${clazz}`}\r\n                    key = {name} \r\n                    onClick = {() => onFilterChange(name)}>\r\n                        {label}\r\n                    </button>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./item-add-form.css\";\r\n\r\nexport default class ItemAddForm extends Component{\r\n\r\n    state = {\r\n        label: \"\"\r\n    };\r\n\r\n    onLabelChange = (e) => {\r\n        this.setState({\r\n            label: e.target.value\r\n        });\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.addItem(this.state.label);\r\n        this.setState ({\r\n            label: \"\" \r\n        });\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <form className=\"item-add-form d-flex\"\r\n            onSubmit = {this.onSubmit}>\r\n                <input type=\"text\"\r\n                className=\"form-control\"\r\n                onChange = {this.onLabelChange}\r\n                placeholder=\"Type text here\"\r\n                value = {this.state.label} />\r\n                <button className=\"btn btn-outline-secondary\">\r\n                    Add Item\r\n                </button>\r\n            </form>\r\n        );\r\n    };\r\n};","import React, { Component } from 'react';\r\n\r\nimport AppHeader from \"../app-header/app-header\";\r\nimport SearchPanel from \"../search-panel/search-panel\";\r\nimport TodoList from \"../todo-list/todo-list\";\r\nimport ItemStatusFilter from \"../item-status-filter/item-status-filter\";\r\nimport ItemAddForm from \"../item-add-form/item-add-form\";\r\n\r\nimport \"./app.css\";\r\n\r\nexport default class App extends Component {\r\n\r\n    maxId = 100;\r\n\r\n    state = {\r\n        todoData : [\r\n            this.createTodoItem(\"Learn React\"),\r\n            this.createTodoItem(\"Create App\"),\r\n            this.createTodoItem(\"Have a work\")\r\n        ],\r\n        term: \"\",\r\n        filter: \"all\"\r\n    };\r\n\r\n    createTodoItem (label) {\r\n        return {\r\n            label: label,\r\n            important: false,\r\n            done: false,\r\n            id: this.maxId++\r\n        }\r\n    };\r\n    \r\n    deleteItem = (id) => {\r\n\r\n        this.setState( ({ todoData })=> {\r\n            const idx =todoData.findIndex((el) => el.id === id);\r\n\r\n            // const before = todoData.slice(0, idx);  // альтернативный способ\r\n            // const after = todoData.slice(idx + 1);\r\n            // const newArray = [...before, ...after];\r\n\r\n            const newArray = [ \r\n                ...todoData.slice(0, idx),\r\n                ...todoData.slice(idx + 1)\r\n            ];\r\n\r\n            return {\r\n                todoData: newArray\r\n            };\r\n        });\r\n    };\r\n\r\n    addItem = (text) => {\r\n        const newItem = this.createTodoItem(text);\r\n\r\n        this.setState (({todoData})=> {\r\n            const newArray = [\r\n                ...todoData,\r\n                newItem\r\n            ]\r\n\r\n            return {\r\n                todoData: newArray\r\n            }\r\n        });\r\n    };\r\n\r\n    toggleProperty(arr, id, propName) {\r\n        const idx =arr.findIndex((el) => el.id === id); \r\n            \r\n        const oldItem = arr[idx];\r\n        const newItem = { ...oldItem, [propName]: !oldItem[propName] };\r\n\r\n        return [ \r\n            ...arr.slice(0, idx),\r\n            newItem,\r\n            ...arr.slice(idx + 1)\r\n        ];\r\n\r\n        // return ({\r\n        //     todoData: newArray\r\n        // });\r\n    }\r\n\r\n    onToggleImportant = (id) => {\r\n        \r\n        this.setState(({ todoData })=> {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, \"important\")\r\n            };\r\n        });\r\n\r\n    };\r\n\r\n    onToggleDone = (id) => {\r\n\r\n        this.setState(({ todoData })=> {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, \"done\")\r\n            };\r\n        });\r\n    };\r\n\r\n    onSearchChange = (term) => {\r\n        this.setState ({term});\r\n    };\r\n\r\n    onFilterChange = (filter) => {\r\n        this.setState ({filter});\r\n    };\r\n    \r\n\r\n    search (items, term) {\r\n\r\n        if (term.length === 0) {\r\n            return items;\r\n        }\r\n        return items.filter( (item) => {\r\n            return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\r\n        });\r\n    };\r\n\r\n    filter (items, filter) {\r\n        switch (filter) {\r\n            case \"all\":\r\n                return items;\r\n            case \"active\":\r\n                return items.filter( (item) => !item.done);\r\n            case \"done\":\r\n                return items.filter( (item) => item.done);\r\n            default:\r\n                 return items;\r\n        }\r\n    };\r\n\r\n    \r\n\r\n    render () {\r\n\r\n        const { todoData, term, filter } = this.state;\r\n\r\n        const visibleItems = this.filter(this.search(todoData, term), filter);\r\n\r\n        const doneCount = todoData.filter( (el) => el.done).length;\r\n\r\n        const todoCount = todoData.length - doneCount;\r\n\r\n        return (\r\n            <div className=\"todo-app\">\r\n                <AppHeader toDo={todoCount} done={doneCount} />\r\n                <div className=\"top-panel d-flex\">\r\n                    <SearchPanel\r\n                        onSearchChange = {this.onSearchChange}\r\n                    />\r\n                    <ItemStatusFilter\r\n                        filter = {filter}\r\n                        onFilterChange = {this.onFilterChange}\r\n                    />\r\n                </div>\r\n    \r\n                <TodoList todos={visibleItems}\r\n                onDeleted = {this.deleteItem}\r\n                onToggleDone= {this.onToggleDone}\r\n                onToggleImportant= {this.onToggleImportant} />\r\n                <ItemAddForm addItem = {this.addItem} />\r\n            </div>\r\n        );\r\n    }\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from \"./components/app/app\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}